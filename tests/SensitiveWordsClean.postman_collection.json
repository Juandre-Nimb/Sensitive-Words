{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Sensitive Words Clean API",
		"description": "Complete API collection for testing Sensitive Words Clean API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Sensitive Words",
			"item": [
				{
					"name": "Get All Sensitive Words",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/SensitiveWords",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"SensitiveWords"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sensitive Word by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Response has required fields\", function () {",
									"        const jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.have.property('id');",
									"        pm.expect(jsonData).to.have.property('word');",
									"        pm.expect(jsonData).to.have.property('createdAt');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/SensitiveWords/{{wordId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"SensitiveWords",
								"{{wordId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Sensitive Word",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('word');",
									"    pm.expect(jsonData).to.have.property('createdAt');",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"// Store the created word ID for other tests",
									"if (pm.response.code === 201) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set('createdWordId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"word\": \"badword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/SensitiveWords",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"SensitiveWords"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Sensitive Word",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Response has required fields\", function () {",
									"        const jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.have.property('id');",
									"        pm.expect(jsonData).to.have.property('word');",
									"        pm.expect(jsonData).to.have.property('updatedAt');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"word\": \"updatedword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/SensitiveWords/{{wordId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"SensitiveWords",
								"{{wordId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Sensitive Word",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 404]);",
									"});",
									"",
									"if (pm.response.code === 204) {",
									"    pm.test(\"Response body is empty\", function () {",
									"        pm.expect(pm.response.text()).to.be.empty;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/SensitiveWords/{{wordId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"SensitiveWords",
								"{{wordId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Text Sanitization",
			"item": [
				{
					"name": "Sanitize Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('originalText');",
									"    pm.expect(jsonData).to.have.property('sanitizedText');",
									"    pm.expect(jsonData).to.have.property('detectedWords');",
									"});",
									"",
									"pm.test(\"Detected words is an array\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.detectedWords).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"This is a sample text with badword in it\",\n  \"replacementCharacter\": \"*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/TextSanitization/sanitize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"TextSanitization",
								"sanitize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sanitize Text with Custom Replacement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Custom replacement character is used\", function () {",
									"    const jsonData = pm.response.json();",
									"    if (jsonData.detectedWords.length > 0) {",
									"        pm.expect(jsonData.sanitizedText).to.include('#');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"This text contains badword and other inappropriate content\",\n  \"replacementCharacter\": \"#\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/TextSanitization/sanitize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"TextSanitization",
								"sanitize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sanitize Empty Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 (validation error)\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"\",\n  \"replacementCharacter\": \"*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/TextSanitization/sanitize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"TextSanitization",
								"sanitize"
							]
						}
					},
					"response": []
				}
			]
		},				
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7203",
			"type": "string"
		},
		{
			"key": "wordId",
			"value": "1",
			"type": "string"
		}
	]
}
